module Param;

export *;

def Int n_pipelines() = 3;
def Int runs() = 20;
def Int cycles() = 16;

////WORKLOADS////
def List<List<Rat>> sizes() = list[list[80, 60, 20, 140, 80, 60, 40, 120], list[60, 40, 120, 80, 60, 20, 140, 80], list[20, 140, 80, 60, 40, 120, 80, 60]];
def Int size_length() = 8;
////WORKLOADS////

/////TIMING ASPECTS/////
def Rat sec_to_time_unit() = 20; //be this value v => v time unit = 1 sec
def Rat monitoring_inverval() = 10 * sec_to_time_unit(); //monitoring window 10s
def Rat req_inverval() = 3 * sec_to_time_unit(); //data alert request interval 3s

def Rat bandwidth() = 70 * pow(10,6) / sec_to_time_unit(); //byte/s
def Rat byte_header_size() = 3500; //byte
def Rat compute_data_size_to_send(Rat curr_size) = pow(curr_size,2) * byte_header_size(); //byte
/////TIMING ASPECTS/////

///THRESHOLDS///
def Rat lat_threshold_to_edge() = 18/10 * sec_to_time_unit(); //threshold in sec
def Rat lat_threshold_to_cloud() = 1 * sec_to_time_unit(); //threshold in sec
def Rat size_threshold() = 65 * 65 * byte_header_size(); //threshold in sec
///THRESHOLDS///


////TRANSMISSION SPEED///
def Rat slowdown_factor() = 564/100;
def Map<Rat,Float> bandiwdth_usages() = map[Pair(20,6.229654),Pair(40,18.583838),Pair(60,32.003485),Pair(80,41.861247),Pair(100,50.265722),Pair(120,57.043015),Pair(140,51.973993)];
def Rat predict_bandwidth(Rat size) = pow(10,6) * rat(lookupUnsafe(bandiwdth_usages(),size))/sec_to_time_unit();
////TRANSMISSION SPEED///






