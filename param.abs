module Param;

export *;

def Int n_pipelines() = 3;
def Rat sec_to_time_unit() = 30; //be this value v => v time unit = 1 sec
def Rat monitoring_inverval() = 10 * sec_to_time_unit(); //monitoring window in TU
def Rat req_inverval() = 3 * sec_to_time_unit(); //data alert request interval in TU
def Rat byte_header_size() = 3500; //byte
def Rat edge_bandwidth() = 40 * pow(10,6) / sec_to_time_unit(); //MB per TU
def Rat cloud_bandwidth() = 10 * pow(10,6) / sec_to_time_unit(); // MB per TU
def Rat compute_data_size_to_send(Rat curr_size) = pow(curr_size,2) * byte_header_size(); //byte

def Rat lat_threshold() = 2 * sec_to_time_unit(); //threshold in TU
def Rat byte_threshold() = 65 * 65 * byte_header_size(); //threshold in TU

def List<List<Rat>> sizes() = list[list[80, 60, 20, 150, 80, 60, 40, 120], list[60, 40, 120, 80, 60, 20, 150, 80], list[20, 150, 80, 60, 40, 120, 80, 60]];
def Int size_length() = 8;
def Int size_repetition() = 10; //number of repetition of for each single element in sizes() 

def Rat propagationSpeed() = 2 * pow(10,8) / sec_to_time_unit(); //propagation speed of fiber optic cables in meters/TU
def Rat edgeDistance() = 0; //distance in meters
def Rat cloudDistance() = pow(10,8); //distance in meters

